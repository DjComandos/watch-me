(function () {    var host = document.location.protocol + '//' + document.location.host;    $(document).ready(function(){        watchMeClient.connect();        $('#connect').click(function (){            watchMeClient.logIn($('#loginName').val());        });    });    var templatesBuilder = {        buildUsersList: function (data){            if(!!data && !!data.users) {                var usersList = [],                    u = data.users;                usersList.length = 1000;                for(var key in u) {                    if(u.hasOwnProperty(key)) {                        usersList.push('<tr><td>');                        usersList.push(u[key]);                        usersList.push('</td></tr>');                    }                }                $('#usersOnlineList').html(usersList.join(''));            } else {                $('#usersOnlineList').html('<tr><td>No users online</td></tr>');            }        }    };    var watchMeClient = (function(){        var socket,            userName;                function connect() {            socket = io.connect(host);            socket.on('connect', function (){                 created = true;                console.log('connected');                                socket.on('userloggedin', function(data){                    $('.tab').hide();                    $('#username').text(data.name);                    userName = data.name;                    $('.loggedInScreen').show();                    templatesBuilder.buildUsersList(data);                    templatesBuilder.buildGamesList(data);                });                socket.on('onLogInError', function (data){                    $('.control-group.login-group').addClass('error');                    $('.control-group.login-group .control-label').text(data.msg);                });                socket.on('usersListChanged', templatesBuilder.buildUsersList);            });        }        function logIn(userName){            if(created && !!socket) {                if(!!userName) {                    socket.emit('login', {name: userName});                }            }        }    return {        connect: connect,        logIn: logIn    };    }());}());